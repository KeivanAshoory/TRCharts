/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#import "AutomaticNumberTickCalculatorGeneratedTests.h"
#import <TRChartsObjc/AutomaticNumberTickCalculator.h>
#import "TestUtils.hh"

#import <XCTest/XCTestAssertions.h>

@implementation TRAutomaticNumberTickCalculatorGeneratedTests

- (void)setUp
{
    [super setUp];
}

- (void)tearDown
{
    [super tearDown];
}

-(id)createInstance
{
	return [[TRAutomaticNumberTickCalculator alloc] init];
}

- (void) testInitializeFieldTargetScreenInterval
{
	TRAutomaticNumberTickCalculator * instance = [self createInstance];
	if(instance) {
		double expected = 1.0;
		double actual = [instance targetScreenInterval];
		XCTAssertEqual(expected, actual);
	}
}

- (void) testInitializeFieldMinInterval
{
	TRAutomaticNumberTickCalculator * instance = [self createInstance];
	if(instance) {
		double expected = 0.0;
		double actual = [instance minInterval];
		XCTAssertEqual(expected, actual);
	}
}

- (void) testInitializeFieldBase
{
	TRAutomaticNumberTickCalculator * instance = [self createInstance];
	if(instance) {
		double expected = 10.0;
		double actual = [instance base];
		XCTAssertEqual(expected, actual);
	}
}

- (void) testInitializeFieldMultipliers
{
	TRAutomaticNumberTickCalculator * instance = [self createInstance];
	if(instance) {
		NSArray * expected = @[5.0, 2.0];
		NSArray * actual = [instance multipliers];
		XCTAssertEqualObjects(expected, actual);
	}
}

- (void) testSetFieldTargetScreenInterval
{
	TRAutomaticNumberTickCalculator * instance = [self createInstance];
	if(instance) {
		double original = [instance targetScreenInterval];
		double expected = TRChartsObjc::getNumberTestValue(original);
		[instance setTargetScreenInterval:expected];
		double actual = [instance targetScreenInterval];
		XCTAssertEqual(expected, actual);
	}
}

- (void) testSetFieldMinInterval
{
	TRAutomaticNumberTickCalculator * instance = [self createInstance];
	if(instance) {
		double original = [instance minInterval];
		double expected = TRChartsObjc::getNumberTestValue(original);
		[instance setMinInterval:expected];
		double actual = [instance minInterval];
		XCTAssertEqual(expected, actual);
	}
}

- (void) testSetFieldBase
{
	TRAutomaticNumberTickCalculator * instance = [self createInstance];
	if(instance) {
		double original = [instance base];
		double expected = TRChartsObjc::getNumberTestValue(original);
		[instance setBase:expected];
		double actual = [instance base];
		XCTAssertEqual(expected, actual);
	}
}

- (void) testSetFieldMultipliers
{
	TRAutomaticNumberTickCalculator * instance = [self createInstance];
	if(instance) {
		NSArray * original = [instance multipliers];
		NSArray * expected = TRChartsObjc::getListNumberTestValue(original);
		[instance setMultipliers:expected];
		NSArray * actual = [instance multipliers];
		XCTAssertEqualObjects(expected, actual);
	}
}


@end
