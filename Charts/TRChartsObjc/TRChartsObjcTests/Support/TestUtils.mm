/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#import "TestUtils.hh"



BOOL TRChartsObjc::getBooleanTestValue(BOOL defaultValue)
{
	return !defaultValue;
}

double TRChartsObjc::getNumberTestValue(double defaultValue)
{
	return defaultValue + 1.0;
}

long TRChartsObjc::getIntegerTestValue(long defaultValue)
{
	return defaultValue + 1;
}

NSString * TRChartsObjc::getStringTestValue(NSString * defaultValue)
{
	return [defaultValue stringByAppendingString:@"test"];
}

TRColor * TRChartsObjc::getColorTestValue(TRColor * defaultValue)
{
	return defaultValue;
}

TRFont * TRChartsObjc::getFontTestValue(TRFont * defaultValue)
{
	return defaultValue;
}

TRMargin * TRChartsObjc::getMarginTestValue(TRMargin * defaultValue)
{
	return defaultValue;
}

TRSize * TRChartsObjc::getSizeTestValue(TRSize * defaultValue)
{
	return defaultValue;
}

NSArray * TRChartsObjc::getListStringTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:@""];
}

TRFormatSyntax TRChartsObjc::getFormatSyntaxTestValue(TRFormatSyntax defaultValue)
{
	return defaultValue;
}

TRDateUnit TRChartsObjc::getDateUnitTestValue(TRDateUnit defaultValue)
{
	return defaultValue;
}

TRRange * TRChartsObjc::getRangeTestValue(TRRange * defaultValue)
{
	return defaultValue;
}

NSArray * TRChartsObjc::getListNumberTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:0.0];
}

TRDateInterval * TRChartsObjc::getDateIntervalTestValue(TRDateInterval * defaultValue)
{
	return defaultValue;
}

id<TRRangeCalculator> TRChartsObjc::getRangeCalculatorTestValue(id<TRRangeCalculator> defaultValue)
{
	return defaultValue;
}

TRDataTransform * TRChartsObjc::getDataTransformTestValue(TRDataTransform * defaultValue)
{
	return defaultValue;
}

TRContinuousAxis * TRChartsObjc::getContinuousAxisTestValue(TRContinuousAxis * defaultValue)
{
	return defaultValue;
}

TREdge TRChartsObjc::getEdgeTestValue(TREdge defaultValue)
{
	return defaultValue;
}

TRLabel * TRChartsObjc::getLabelTestValue(TRLabel * defaultValue)
{
	return [[TRLabel alloc] init];
}

TRLineStyle * TRChartsObjc::getLineStyleTestValue(TRLineStyle * defaultValue)
{
	return defaultValue;
}

id<TRAxisLayout> TRChartsObjc::getAxisLayoutTestValue(id<TRAxisLayout> defaultValue)
{
	return defaultValue;
}

id<TRNumberFormatter> TRChartsObjc::getNumberFormatterTestValue(id<TRNumberFormatter> defaultValue)
{
	return defaultValue;
}

id<TRNumberTickCalculator> TRChartsObjc::getNumberTickCalculatorTestValue(id<TRNumberTickCalculator> defaultValue)
{
	return defaultValue;
}

id<TRDateFormatter> TRChartsObjc::getDateFormatterTestValue(id<TRDateFormatter> defaultValue)
{
	return defaultValue;
}

id<TRDateTickCalculator> TRChartsObjc::getDateTickCalculatorTestValue(id<TRDateTickCalculator> defaultValue)
{
	return defaultValue;
}

TRIndexRange * TRChartsObjc::getIndexRangeTestValue(TRIndexRange * defaultValue)
{
	return defaultValue;
}

TRPointStyle * TRChartsObjc::getPointStyleTestValue(TRPointStyle * defaultValue)
{
	return defaultValue;
}

id<TRContinuousDataSource> TRChartsObjc::getContinuousDataSource_ScalarDatumTestValue(id<TRContinuousDataSource> defaultValue)
{
	return defaultValue;
}

TRScalarDatum * TRChartsObjc::getScalarDatumTestValue(TRScalarDatum * defaultValue)
{
	return defaultValue;
}

id<TRLineStyleSource> TRChartsObjc::getLineStyleSourceTestValue(id<TRLineStyleSource> defaultValue)
{
	return defaultValue;
}

id<TRContinuousDataSource> TRChartsObjc::getContinuousDataSource_RangeDatumTestValue(id<TRContinuousDataSource> defaultValue)
{
	return defaultValue;
}

TRRangeDatum * TRChartsObjc::getRangeDatumTestValue(TRRangeDatum * defaultValue)
{
	return defaultValue;
}

id<TRContinuousDataSource> TRChartsObjc::getContinuousDataSource_OHLCDatumTestValue(id<TRContinuousDataSource> defaultValue)
{
	return defaultValue;
}

TROHLCDatum * TRChartsObjc::getOHLCDatumTestValue(TROHLCDatum * defaultValue)
{
	return defaultValue;
}

TRCoordinates * TRChartsObjc::getCoordinatesTestValue(TRCoordinates * defaultValue)
{
	return defaultValue;
}

NSArray * TRChartsObjc::getListAnimationEffectTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:nil];
}

id<TRAnimationEffect> TRChartsObjc::getAnimationEffectTestValue(id<TRAnimationEffect> defaultValue)
{
	return defaultValue;
}

id<TRAnimationDelegate> TRChartsObjc::getAnimationDelegateTestValue(id<TRAnimationDelegate> defaultValue)
{
	return defaultValue;
}

NSArray * TRChartsObjc::getListDrawableTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:nil];
}

TRDrawable * TRChartsObjc::getDrawableTestValue(TRDrawable * defaultValue)
{
	return defaultValue;
}

id<TRConstraintBehaviour> TRChartsObjc::getConstraintBehaviourTestValue(id<TRConstraintBehaviour> defaultValue)
{
	return defaultValue;
}

NSArray * TRChartsObjc::getListAxisTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:nil];
}

TRAxis * TRChartsObjc::getAxisTestValue(TRAxis * defaultValue)
{
	return defaultValue;
}

TRTransform * TRChartsObjc::getTransformTestValue(TRTransform * defaultValue)
{
	return defaultValue;
}

TRChart * TRChartsObjc::getChartTestValue(TRChart * defaultValue)
{
	return [[TRChart alloc] init];
}

NSArray * TRChartsObjc::getListEdgeTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:TR_EDGE_LEFT];
}

NSArray * TRChartsObjc::getListSeriesTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:nil];
}

TRSeries * TRChartsObjc::getSeriesTestValue(TRSeries * defaultValue)
{
	return defaultValue;
}

NSArray * TRChartsObjc::getListDecorationTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:nil];
}

TRDecoration * TRChartsObjc::getDecorationTestValue(TRDecoration * defaultValue)
{
	return defaultValue;
}

NSArray * TRChartsObjc::getListConstraintTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:nil];
}

TRConstraint * TRChartsObjc::getConstraintTestValue(TRConstraint * defaultValue)
{
	return [[TRConstraint alloc] init];
}

NSArray * TRChartsObjc::getListAnimationTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:nil];
}

TRAnimation * TRChartsObjc::getAnimationTestValue(TRAnimation * defaultValue)
{
	return [[TRAnimation alloc] init];
}

NSArray * TRChartsObjc::getListTouchTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:[TRTouch position:[TRPoint x:0.0 y:0.0] lastPosition:[TRPoint x:0.0 y:0.0]]];
}

TRTouch * TRChartsObjc::getTouchTestValue(TRTouch * defaultValue)
{
	return defaultValue;
}

TRResizeMode TRChartsObjc::getResizeModeTestValue(TRResizeMode defaultValue)
{
	return defaultValue;
}

TRPoint * TRChartsObjc::getPointTestValue(TRPoint * defaultValue)
{
	return defaultValue;
}

TRFontHint TRChartsObjc::getFontHintTestValue(TRFontHint defaultValue)
{
	return defaultValue;
}

TRLineMode TRChartsObjc::getLineModeTestValue(TRLineMode defaultValue)
{
	return defaultValue;
}

TROHLC * TRChartsObjc::getOHLCTestValue(TROHLC * defaultValue)
{
	return defaultValue;
}

TRLogLevel TRChartsObjc::getLogLevelTestValue(TRLogLevel defaultValue)
{
	return defaultValue;
}

NSArray * TRChartsObjc::getListColorTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:[TRColor red:0.0 green:0.0 blue:0.0 alpha:0.0]];
}

NSArray * TRChartsObjc::getListLineStyleTestValue(NSArray * defaultValue)
{
	return defaultValue;//[defaultValue arrayByAddingObject:[TRLineStyle thickness:0.0 mode:TR_LINEMODE_SOLID]];
}

id<TRColorSource> TRChartsObjc::getColorSourceTestValue(id<TRColorSource> defaultValue)
{
	return defaultValue;
}

id<TRLogHandler> TRChartsObjc::getLogHandlerTestValue(id<TRLogHandler> defaultValue)
{
	return defaultValue;
}

