/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#import <TRChartsObjc/FadeInEffect.h>
#import <TRChartsObjc/Drawable.h>

#import <TRCharts/FadeInEffect.hpp>
#import <TRCharts/Drawable.hpp>

#import <TRChartsObjc/Support/Marshallers.hh>
#import <TRCodegenSupportObjc/Handle.hh>

@implementation TRFadeInEffect

-(TRFadeInEffect*)init {
	TRChartsObjc::verifyCurrentQueue();
	self = [super initConcrete];
	Charts::FadeInEffect * const obj = new Charts::FadeInEffect();
	CodegenSupportObjc::Handle * const handle = new CodegenSupportObjc::Handle(obj, self);
	obj->setHandle(handle);
	[self setHandle:handle];
	return self;
}

-(NSArray *)drawableList {
	TRChartsObjc::verifyCurrentQueue();
	CodegenSupportObjc::Handle * const handle = static_cast<CodegenSupportObjc::Handle *>([self handle]);
	std::shared_ptr<Charts::FadeInEffect> obj = handle->getNativeObject<Charts::FadeInEffect>();
	return TRChartsObjc::getListDrawableMarshaller().unmarshall(obj->getDrawableList());
}

-(void)setDrawableList:(NSArray *)value {
	TRChartsObjc::verifyCurrentQueue();
	CodegenSupportObjc::Handle * const handle = static_cast<CodegenSupportObjc::Handle *>([self handle]);
	std::shared_ptr<Charts::FadeInEffect> obj = handle->getNativeObject<Charts::FadeInEffect>();
	obj->setDrawableList(TRChartsObjc::getListDrawableMarshaller().marshall(value));
}

-(void)apply:(double)position duration:(double)duration {
	TRChartsObjc::verifyCurrentQueue();
	CodegenSupportObjc::Handle * const handle = static_cast<CodegenSupportObjc::Handle *>([self handle]);
	std::shared_ptr<Charts::FadeInEffect> obj = handle->getNativeObject<Charts::FadeInEffect>();
	obj->apply(TRChartsObjc::getNumberMarshaller().marshall(position), TRChartsObjc::getNumberMarshaller().marshall(duration));
}

@end