/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#include <Foundation/Foundation.h>

/**
 * Log level, each log level implies that level, and all more severe levels
 *
 */

typedef NS_ENUM(NSInteger, TRLogLevel)
{
	/**
	 * Log everything
	 */
	TR_LOGLEVEL_TRACE,

	/**
	 * Log internal developer information
	 */
	TR_LOGLEVEL_DEBUG,

	/**
	 * Log general information
	 */
	TR_LOGLEVEL_INFO,

	/**
	 * Log minor/recoverable errors and incorrect usage
	 */
	TR_LOGLEVEL_WARN,

	/**
	 * Log serious errors
	 */
	TR_LOGLEVEL_ERROR

};

typedef enum TRLogLevel TRLogLevel;

/**
 * Get the size (element count) of the TRLogLevel enum.
 *
 * @return The number of elements.
 */

static inline NSInteger TRLogLevel_size(void)
{
	return 5;
}

/**
 * Get the name of a given member of the TRLogLevel enum.
 *
 * @param value The enum value.
 * @return The name (as per source code), or "?" if an invalid value is provided.
 */

static inline NSString * TRLogLevel_name(TRLogLevel value)
{
	switch(value) {
	case TR_LOGLEVEL_TRACE:
		return @"TR_LOGLEVEL_TRACE";
	case TR_LOGLEVEL_DEBUG:
		return @"TR_LOGLEVEL_DEBUG";
	case TR_LOGLEVEL_INFO:
		return @"TR_LOGLEVEL_INFO";
	case TR_LOGLEVEL_WARN:
		return @"TR_LOGLEVEL_WARN";
	case TR_LOGLEVEL_ERROR:
		return @"TR_LOGLEVEL_ERROR";
	default:
		return @"?";
	}
}
