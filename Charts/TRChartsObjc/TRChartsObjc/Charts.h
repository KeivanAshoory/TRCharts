/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

/*
@protocol TRLogHandler;

@protocol TRNumberFormatter;

@protocol TRDateFormatter;

@protocol TRNumberTickCalculator;

@protocol TRDateTickCalculator;

@protocol TRRangeCalculator;

@protocol TRAxisLayout;

@protocol TRColorSource;

@protocol TRLineStyleSource;

@protocol TRAnimationDelegate;

@protocol TRAnimationEffect;

@protocol TRRenderable;

@protocol TRConstraintBehaviour;
@class TRAttachable;
@class TRDrawable;
@class TRChartElement;
@class TRLabel;
@class TRBasicNumberFormatter;
@class TRSuffixNumberFormatter;
@class TRAbstractDateFormatter;
@class TRBasicDateFormatter;
@class TRPerUnitDateFormatter;
@class TRFixedNumberTickCalculator;
@class TRAutomaticNumberTickCalculator;
@class TRFixedDateTickCalculator;
@class TRAutomaticDateTickCalculator;
@class TRFixedRangeCalculator;
@class TRIncludeZeroRangeCalculator;
@class TRPaddingRangeCalculator;
@class TRTickAligningRangeCalculator;
@class TRDataFittingAxisLayout;
@class TRAxis;
@class TRContinuousAxis;
@class TRAbstractNumberAxis;
@class TRNumberAxis;
@class TRDateAxis;
@class TRCategoryAxis;
@class TRSeries;
@class TRPointSeries;
@class TRLineSeries;
@class TRSteppedLineSeries;
@class TRBandSeries;
@class TRSteppedBandSeries;
@class TRAreaSeries;
@class TRSteppedAreaSeries;
@class TRCandlestickSeries;
@class TRDecoration;
@class TRLineDecoration;
@class TRPointDecoration;
@class TRAnimation;
@class TRFadeInEffect;
@class TRFadeOutEffect;
@class TRConstraint;
@class TRDataScaleConstraintBehaviour;
@class TRDataOffsetConstraintBehaviour;
@class TRChart;
*/

#import <TRChartsObjc/Edge.h>
#import <TRChartsObjc/FontHint.h>
#import <TRChartsObjc/LogLevel.h>
#import <TRChartsObjc/LineMode.h>
#import <TRChartsObjc/DateUnit.h>
#import <TRChartsObjc/ResizeMode.h>
#import <TRChartsObjc/FormatSyntax.h>

#import <TRChartsObjc/Font.h>
#import <TRChartsObjc/Color.h>
#import <TRChartsObjc/LineStyle.h>
#import <TRChartsObjc/PointStyle.h>
#import <TRChartsObjc/IndexRange.h>
#import <TRChartsObjc/Margin.h>
#import <TRChartsObjc/Point.h>
#import <TRChartsObjc/Size.h>
#import <TRChartsObjc/Coordinates.h>
#import <TRChartsObjc/ContinuousDatum.h>
#import <TRChartsObjc/ScalarDatum.h>
#import <TRChartsObjc/Range.h>
#import <TRChartsObjc/RangeDatum.h>
#import <TRChartsObjc/OHLC.h>
#import <TRChartsObjc/OHLCDatum.h>
#import <TRChartsObjc/DateInterval.h>
#import <TRChartsObjc/DataTransform.h>
#import <TRChartsObjc/Transform.h>
#import <TRChartsObjc/Touch.h>
#import <TRChartsObjc/LogHandler.h>
#import <TRChartsObjc/NumberFormatter.h>
#import <TRChartsObjc/DateFormatter.h>
#import <TRChartsObjc/NumberTickCalculator.h>
#import <TRChartsObjc/DateTickCalculator.h>
#import <TRChartsObjc/RangeCalculator.h>
#import <TRChartsObjc/AxisLayout.h>
#import <TRChartsObjc/ColorSource.h>
#import <TRChartsObjc/LineStyleSource.h>
#import <TRChartsObjc/AnimationDelegate.h>
#import <TRChartsObjc/AnimationEffect.h>
#import <TRChartsObjc/Renderable.h>
#import <TRChartsObjc/ConstraintBehaviour.h>
#import <TRChartsObjc/ContinuousDataSource.h>
#import <TRChartsObjc/Attachable.h>
#import <TRChartsObjc/Drawable.h>
#import <TRChartsObjc/ChartElement.h>
#import <TRChartsObjc/Label.h>
#import <TRChartsObjc/BasicNumberFormatter.h>
#import <TRChartsObjc/SuffixNumberFormatter.h>
#import <TRChartsObjc/AbstractDateFormatter.h>
#import <TRChartsObjc/BasicDateFormatter.h>
#import <TRChartsObjc/PerUnitDateFormatter.h>
#import <TRChartsObjc/FixedNumberTickCalculator.h>
#import <TRChartsObjc/AutomaticNumberTickCalculator.h>
#import <TRChartsObjc/FixedDateTickCalculator.h>
#import <TRChartsObjc/AutomaticDateTickCalculator.h>
#import <TRChartsObjc/FixedRangeCalculator.h>
#import <TRChartsObjc/IncludeZeroRangeCalculator.h>
#import <TRChartsObjc/PaddingRangeCalculator.h>
#import <TRChartsObjc/TickAligningRangeCalculator.h>
#import <TRChartsObjc/DataFittingAxisLayout.h>
#import <TRChartsObjc/Axis.h>
#import <TRChartsObjc/ContinuousAxis.h>
#import <TRChartsObjc/AbstractNumberAxis.h>
#import <TRChartsObjc/NumberAxis.h>
#import <TRChartsObjc/DateAxis.h>
#import <TRChartsObjc/CategoryAxis.h>
#import <TRChartsObjc/Series.h>
#import <TRChartsObjc/PointSeries.h>
#import <TRChartsObjc/LineSeries.h>
#import <TRChartsObjc/SteppedLineSeries.h>
#import <TRChartsObjc/BandSeries.h>
#import <TRChartsObjc/SteppedBandSeries.h>
#import <TRChartsObjc/AreaSeries.h>
#import <TRChartsObjc/SteppedAreaSeries.h>
#import <TRChartsObjc/CandlestickSeries.h>
#import <TRChartsObjc/Decoration.h>
#import <TRChartsObjc/LineDecoration.h>
#import <TRChartsObjc/PointDecoration.h>
#import <TRChartsObjc/Animation.h>
#import <TRChartsObjc/FadeInEffect.h>
#import <TRChartsObjc/FadeOutEffect.h>
#import <TRChartsObjc/Constraint.h>
#import <TRChartsObjc/DataScaleConstraintBehaviour.h>
#import <TRChartsObjc/DataOffsetConstraintBehaviour.h>
#import <TRChartsObjc/Chart.h>
#import <TRChartsObjc/ContinuousSeries.h>

/**
 * Namespace/collection of top-level static methods.
 */

@interface TRCharts : NSObject

/**
 * Throws an exception (should not try to construct).
 */

-(TRCharts*)init;

/**
 * Library-wide log level setting
 *
 * @return The current log level.
 * @see setLogLevel:
 */
+(TRLogLevel)logLevel;
/**
 * Library-wide log level setting
 *
 * @param value The new log level.
 * @see logLevel
 */
+(void)setLogLevel:(TRLogLevel)value;

/**
 * Library-wide log handler.
 *
 * Log messages will only be delivered to the handler if the log level exceeds
 * the library-wide log level.
 *
 * If not set, logging will be handled in a platform-specific way.
 *
 * @return The current log target.
 * @see setLogHandler:
 */
+(id<TRLogHandler>)logHandler;
/**
 * Library-wide log handler.
 *
 * Log messages will only be delivered to the handler if the log level exceeds
 * the library-wide log level.
 *
 * If not set, logging will be handled in a platform-specific way.
 *
 * @param value The new log target.
 * @see logHandler
 */
+(void)setLogHandler:(id<TRLogHandler>)value;

/**
 * Library-wide debug OpenGL validation setting
 *
 * @return The current OpenGL validation setting.
 * @see setDebugGLValidationEnabled:
 */
+(BOOL)debugGLValidationEnabled;
/**
 * Library-wide debug OpenGL validation setting
 *
 * @param value The new OpenGL validation setting.
 * @see debugGLValidationEnabled
 */
+(void)setDebugGLValidationEnabled:(BOOL)value;

/**
 * For debug purposes, marks the parameter queue as 'ok' for calling library methods.
 *
 * @param queue Queue to mark.
 *
 */
+(void)markQueue:(dispatch_queue_t)queue;

/**
 * For debug purposes, undoes markQueue.
 *
 * @param queue Queue to unmark.
 *
 */
+(void)unmarkQueue:(dispatch_queue_t)queue;

/**
 * For debug purposes, check to see if the current queue is marked.
 *
 * @return True if the current is marked.
 *
 */
+(BOOL)isQueueMarked;


/**
 * For debug purposes, turns on queue verification (all library calls will verify that the current queue is marked).
 *
 * @param yes True to enable verification, false to disable.
 *
 */
+(void)enableQueueVerification:(BOOL)yes;
@end
