/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#import <TRChartsObjc/BasicNumberFormatter.h>

/**
 * Extends BasicNumberFormatter, to also display the relevant metric suffix (by
 * default)
 *
 * The formatter is configurable, and could be used with other bases and
 * suffixes; the first suffix will be used for a magnitude that exceeds base^0,
 * the second for a magnitude that exceeds base^1, and so on.
 *
 * @warning This is an automatically generated wrapper around a native object;
 * overriding methods will not work as expected.
 *
 */
@interface TRSuffixNumberFormatter : TRBasicNumberFormatter

/** @name Fields */

/**
 * Indicates the threshold base for selecting a suffix.
 *
 * @return The current base.
 * @see setBase:
 */
-(long)base;

/**
 * Indicates the threshold base for selecting a suffix.
 *
 * @param value The new base.
 * @see base
 */
-(void)setBase:(long)value;

/**
 * Suffix for magnitudes that exceed each power of the base.
 *
 * @return The current suffixes.
 * @see setSuffixes:
 */
-(NSArray *)suffixes;

/**
 * Suffix for magnitudes that exceed each power of the base.
 *
 * @param value The new suffixes.
 * @see suffixes
 */
-(void)setSuffixes:(NSArray *)value;

/** @name Methods */

/**
 * Returns the formatted number
 *
 * @param value Number to format
 * @return The result.
 */
-(NSString *)formatNumber:(double)value;

@end