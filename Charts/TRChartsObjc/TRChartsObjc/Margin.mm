/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#import <TRChartsObjc/Margin.h>
#import <TRChartsObjc/Support/Marshallers.hh>

@implementation TRMargin

-(TRMargin *)init
{
	self = [super init];
	if(self) {
		self.left = 0.0;
		self.right = 0.0;
		self.bottom = 0.0;
		self.top = 0.0;
	}
	return self;
}

+(TRMargin *)left:(double)left right:(double)right bottom:(double)bottom top:(double)top
{
	TRMargin * const result = [[TRMargin alloc] init];
	result.left = left;
	result.right = right;
	result.bottom = bottom;
	result.top = top;
	return result;
}

+(TRMargin *)add:(TRMargin *)margin toMargin:(TRMargin *)toMargin
{
	return TRChartsObjc::getMarginMarshaller().unmarshall(Charts::Margin::add(TRChartsObjc::getMarginMarshaller().marshall(margin), TRChartsObjc::getMarginMarshaller().marshall(toMargin)));	
}

-(BOOL)isEqual:(id)anObject
{
	if(anObject == nil || ! [anObject isKindOfClass:[TRMargin class]]) {
		return NO;
	}
	TRMargin * other = anObject;
	BOOL result = YES;
	result = result && (self.left == other.left);
	result = result && (self.right == other.right);
	result = result && (self.bottom == other.bottom);
	result = result && (self.top == other.top);
	return result;
}

-(NSUInteger)hash
{
	NSUInteger result = 7;
    result = 31 * result + (NSUInteger)self.left;
    result = 31 * result + (NSUInteger)self.right;
    result = 31 * result + (NSUInteger)self.bottom;
    result = 31 * result + (NSUInteger)self.top;
	return result;
}

-(id)copyWithZone:(NSZone *)zone
{
	TRMargin * copy = [[self class] allocWithZone:zone];
	copy.left = self.left;
	copy.right = self.right;
	copy.bottom = self.bottom;
	copy.top = self.top;
	return copy;
}

-(NSString*)description
{
	return [NSString stringWithFormat:@"TRMargin[%f, %f, %f, %f]", self.left, self.right, self.bottom, self.top];
}

@end