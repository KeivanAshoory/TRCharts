/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#import <TRChartsObjc/Decoration.h>
#import <TRChartsObjc/Coordinates.h>
#import <TRChartsObjc/PointStyle.h>
@class TRContinuousAxis;

/**
 * Draws a point at a fixed data position on a given pair of axes
 *
 * @warning This is an automatically generated wrapper around a native object;
 * overriding methods will not work as expected.
 *
 */
@interface TRPointDecoration : TRDecoration

/** @name Fields */

/**
 * The abscissa (traditionally X) axis
 *
 * @return The current abscissa axis.
 * @see setAbscissaAxis:
 */
-(TRContinuousAxis *)abscissaAxis;

/**
 * The abscissa (traditionally X) axis
 *
 * @param value The new abscissa axis.
 * @see abscissaAxis
 */
-(void)setAbscissaAxis:(TRContinuousAxis *)value;

/**
 * The ordinate (traditionally Y) axis
 *
 * @return The current ordinate axis.
 * @see setOrdinateAxis:
 */
-(TRContinuousAxis *)ordinateAxis;

/**
 * The ordinate (traditionally Y) axis
 *
 * @param value The new ordinate axis.
 * @see ordinateAxis
 */
-(void)setOrdinateAxis:(TRContinuousAxis *)value;

/**
 * Position in data co-ordinates
 *
 * @return The current value.
 * @see setValue:
 */
-(TRCoordinates *)value;

/**
 * Position in data co-ordinates
 *
 * @param value The new value.
 * @see value
 */
-(void)setValue:(TRCoordinates *)value;

/**
 * Drawing style for the point
 *
 * @return The current pointStyle.
 * @see setPointStyle:
 */
-(TRPointStyle *)pointStyle;

/**
 * Drawing style for the point
 *
 * @param value The new pointStyle.
 * @see pointStyle
 */
-(void)setPointStyle:(TRPointStyle *)value;

@end