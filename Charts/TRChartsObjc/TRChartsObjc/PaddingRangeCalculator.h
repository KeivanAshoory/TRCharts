/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#import <TRChartsObjc/RangeCalculator.h>
#import <TRChartsObjc/Range.h>
#import <TRCodegenSupportObjc/BaseObject.h>
@protocol TRRangeCalculator;

/**
 * A range calculator that expands the supplied range in both directions by a
 * padding value (must be specified in data coordinates).
 *
 * @warning This is an automatically generated wrapper around a native object;
 * overriding methods will not work as expected.
 *
 */
@interface TRPaddingRangeCalculator : TRBaseObject<TRRangeCalculator>

/** @name Fields */

/**
 * Optional input range calculator (if specified, this is called first and the
 * result used as the input to calculateRange)
 *
 * @return The current rangeCalculator.
 * @see setRangeCalculator:
 */
-(id<TRRangeCalculator>)rangeCalculator;

/**
 * Optional input range calculator (if specified, this is called first and the
 * result used as the input to calculateRange)
 *
 * @param value The new rangeCalculator.
 * @see rangeCalculator
 */
-(void)setRangeCalculator:(id<TRRangeCalculator>)value;

/**
 * Padding (expressed in data coordinates)
 *
 * @return The current padding.
 * @see setPadding:
 */
-(TRRange *)padding;

/**
 * Padding (expressed in data coordinates)
 *
 * @param value The new padding.
 * @see padding
 */
-(void)setPadding:(TRRange *)value;

/** @name Methods */

/**
 * The output data range is [in.min-padding...in.max+padding]
 *
 * @param dataRange Input data range
 * @return The result.
 */
-(TRRange *)calculateRange:(TRRange *)dataRange;

@end