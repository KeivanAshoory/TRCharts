/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

package com.thomsonreuters.corptech.charts;

import java.util.List;

/**
 * <p>
 * Combines a date unit and magnitude
 * </p>
 * <p>
 * <b>NOTE:</b> This is a value class, when passing it to other library
 * methods it is always effectively copied.
 * </p>
 */

@SuppressWarnings("all")
public class DateInterval
{
	private DateUnit unit;
	private double magnitude;

	/**
	 * Initialize a DateInterval with default values.
	 */
	public DateInterval()
	{
	}

	/**
	 * Initialize a DateInterval with provided values.
	 *
	 * @param unit The date unit.
	 * @param magnitude The unit magnitude.
	 */

	public DateInterval(DateUnit unit, double magnitude)
	{
		this.unit = unit;
		this.magnitude = magnitude;
	}

	/**
	 * Get the date unit.
	 * @return The current date unit.
	 */

	public final DateUnit getUnit()
	{
		return this.unit;
	}

	/**
	 * Set the date unit.
	 * @param value The new date unit.
	 */

	public final void setUnit(final DateUnit value)
	{
		this.unit = value;
	}

	/**
	 * Get the unit magnitude.
	 * @return The current unit magnitude.
	 */

	public final double getMagnitude()
	{
		return this.magnitude;
	}

	/**
	 * Set the unit magnitude.
	 * @param value The new unit magnitude.
	 */

	public final void setMagnitude(final double value)
	{
		this.magnitude = value;
	}

	@Override
	public String toString()
	{
		return "DateInterval {" +
				"unit=" + unit + ", " +
				"magnitude=" + magnitude +
				"}";
	}

	@Override
	public boolean equals(final Object other)
	{
		if(this == other) return true;
		if(!(other instanceof DateInterval)) return false;

		final DateInterval tmp = (DateInterval)other;

		if(!((this.unit == null) ? (tmp.unit == null) : this.unit.equals(tmp.unit))) return false;
		if(!(this.magnitude == tmp.magnitude)) return false;

		return true;
	}

	@Override
	public int hashCode()
	{
		int result = 7;

		result = 31 * result + ((this.unit == null) ? 0 : this.unit.hashCode());
		result = 31 * result + ((Double)magnitude).hashCode();

		return result;
	}

}
