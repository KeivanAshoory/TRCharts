/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

package com.thomsonreuters.corptech.charts;

import java.util.List;

/**
 * <p>
 * An open/high/low/close value.
 * </p>
 * <p>
 * <b>NOTE:</b> This is a value class, when passing it to other library
 * methods it is always effectively copied.
 * </p>
 */

@SuppressWarnings("all")
public class OHLC
{
	private double open;
	private double high;
	private double low;
	private double close;

	/**
	 * Initialize a OHLC with default values.
	 */
	public OHLC()
	{
	}

	/**
	 * Initialize a OHLC with provided values.
	 *
	 * @param open The open value.
	 * @param high The high value.
	 * @param low The low value.
	 * @param close The close value.
	 */

	public OHLC(double open, double high, double low, double close)
	{
		this.open = open;
		this.high = high;
		this.low = low;
		this.close = close;
	}

	/**
	 * Get the open value.
	 * @return The current open value.
	 */

	public final double getOpen()
	{
		return this.open;
	}

	/**
	 * Set the open value.
	 * @param value The new open value.
	 */

	public final void setOpen(final double value)
	{
		this.open = value;
	}

	/**
	 * Get the high value.
	 * @return The current high value.
	 */

	public final double getHigh()
	{
		return this.high;
	}

	/**
	 * Set the high value.
	 * @param value The new high value.
	 */

	public final void setHigh(final double value)
	{
		this.high = value;
	}

	/**
	 * Get the low value.
	 * @return The current low value.
	 */

	public final double getLow()
	{
		return this.low;
	}

	/**
	 * Set the low value.
	 * @param value The new low value.
	 */

	public final void setLow(final double value)
	{
		this.low = value;
	}

	/**
	 * Get the close value.
	 * @return The current close value.
	 */

	public final double getClose()
	{
		return this.close;
	}

	/**
	 * Set the close value.
	 * @param value The new close value.
	 */

	public final void setClose(final double value)
	{
		this.close = value;
	}

	@Override
	public String toString()
	{
		return "OHLC {" +
				"open=" + open + ", " +
				"high=" + high + ", " +
				"low=" + low + ", " +
				"close=" + close +
				"}";
	}

	@Override
	public boolean equals(final Object other)
	{
		if(this == other) return true;
		if(!(other instanceof OHLC)) return false;

		final OHLC tmp = (OHLC)other;

		if(!(this.open == tmp.open)) return false;
		if(!(this.high == tmp.high)) return false;
		if(!(this.low == tmp.low)) return false;
		if(!(this.close == tmp.close)) return false;

		return true;
	}

	@Override
	public int hashCode()
	{
		int result = 7;

		result = 31 * result + ((Double)open).hashCode();
		result = 31 * result + ((Double)high).hashCode();
		result = 31 * result + ((Double)low).hashCode();
		result = 31 * result + ((Double)close).hashCode();

		return result;
	}

}
