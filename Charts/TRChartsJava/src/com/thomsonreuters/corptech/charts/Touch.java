/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

package com.thomsonreuters.corptech.charts;

import java.util.List;

/**
 * <p>
 * Representation of a single touch
 * </p>
 * <p>
 * <b>NOTE:</b> This is a value class, when passing it to other library
 * methods it is always effectively copied.
 * </p>
 */

@SuppressWarnings("all")
public class Touch
{
	private Point position;
	private Point lastPosition;

	/**
	 * Initialize a Touch with default values.
	 */
	public Touch()
	{
	}

	/**
	 * Initialize a Touch with provided values.
	 *
	 * @param position The current position.
	 * @param lastPosition The previous position.
	 */

	public Touch(Point position, Point lastPosition)
	{
		this.position = position;
		this.lastPosition = lastPosition;
	}

	/**
	 * Get the current position.
	 * @return The current current position.
	 */

	public final Point getPosition()
	{
		return this.position;
	}

	/**
	 * Set the current position.
	 * @param value The new current position.
	 */

	public final void setPosition(final Point value)
	{
		this.position = value;
	}

	/**
	 * Get the previous position.
	 * @return The current previous position.
	 */

	public final Point getLastPosition()
	{
		return this.lastPosition;
	}

	/**
	 * Set the previous position.
	 * @param value The new previous position.
	 */

	public final void setLastPosition(final Point value)
	{
		this.lastPosition = value;
	}

	@Override
	public String toString()
	{
		return "Touch {" +
				"position=" + position + ", " +
				"lastPosition=" + lastPosition +
				"}";
	}

	@Override
	public boolean equals(final Object other)
	{
		if(this == other) return true;
		if(!(other instanceof Touch)) return false;

		final Touch tmp = (Touch)other;

		if(!((this.position == null) ? (tmp.position == null) : this.position.equals(tmp.position))) return false;
		if(!((this.lastPosition == null) ? (tmp.lastPosition == null) : this.lastPosition.equals(tmp.lastPosition))) return false;

		return true;
	}

	@Override
	public int hashCode()
	{
		int result = 7;

		result = 31 * result + ((this.position == null) ? 0 : this.position.hashCode());
		result = 31 * result + ((this.lastPosition == null) ? 0 : this.lastPosition.hashCode());

		return result;
	}

}
