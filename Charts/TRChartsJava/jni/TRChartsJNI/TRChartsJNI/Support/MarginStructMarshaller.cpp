/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#include <TRChartsJNI/Support/MarginStructMarshaller.hpp>
#include <TRChartsJNI/Support/Marshallers.hpp>

using namespace TRChartsJNI;
using namespace Charts;

namespace
{
	bool inited = false;
	jclass cls;
	jmethodID ctor;
	jfieldID fidLeft;
	jfieldID fidRight;
	jfieldID fidBottom;
	jfieldID fidTop;

	void checkInited(JNIEnv * const env)
	{
		if(!::inited) {
			::inited = true;
			::cls = (jclass)env->NewGlobalRef(env->FindClass("com/thomsonreuters/corptech/charts/Margin"));
			::ctor = env->GetMethodID(::cls, "<init>", "()V");
			::fidLeft = env->GetFieldID(cls, "left", "D");
			::fidRight = env->GetFieldID(cls, "right", "D");
			::fidBottom = env->GetFieldID(cls, "bottom", "D");
			::fidTop = env->GetFieldID(cls, "top", "D");
		}
	}
}

Margin MarginStructMarshaller::marshall(JNIEnv * const env, const jobject & in) const
{
	::checkInited(env);
	Margin out;
	out.left = TRChartsJNI::getNumberMarshaller().getFieldValue(env, in, ::fidLeft);
	out.right = TRChartsJNI::getNumberMarshaller().getFieldValue(env, in, ::fidRight);
	out.bottom = TRChartsJNI::getNumberMarshaller().getFieldValue(env, in, ::fidBottom);
	out.top = TRChartsJNI::getNumberMarshaller().getFieldValue(env, in, ::fidTop);
	return out;
}

jobject MarginStructMarshaller::unmarshall(JNIEnv * const env, const Margin & in) const
{
	::checkInited(env);
	jobject out = env->NewObject(::cls, ::ctor);
	TRChartsJNI::getNumberMarshaller().setFieldValue(env, out, ::fidLeft, in.left);
	TRChartsJNI::getNumberMarshaller().setFieldValue(env, out, ::fidRight, in.right);
	TRChartsJNI::getNumberMarshaller().setFieldValue(env, out, ::fidBottom, in.bottom);
	TRChartsJNI::getNumberMarshaller().setFieldValue(env, out, ::fidTop, in.top);
	return out;
}

Margin MarginStructMarshaller::getFieldValue(JNIEnv * const env, const jobject obj, const jfieldID fieldID) const
{
	return marshall(env, env->GetObjectField(obj, fieldID));
}

void MarginStructMarshaller::setFieldValue(JNIEnv * const env, const jobject obj, const jfieldID fieldID, const Margin & value) const
{
	env->SetObjectField(obj, fieldID, unmarshall(env, value));
}

Margin MarginStructMarshaller::callMethod(JNIEnv * const env, const jobject obj, const jmethodID methodID, jvalue * const args) const
{
	return marshall(env, env->CallObjectMethodA(obj, methodID, args));
}