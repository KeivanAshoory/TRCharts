/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#ifndef TRChartsJNI_Support_StringMarshaller_hpp
#define TRChartsJNI_Support_StringMarshaller_hpp

#include <TRChartsJNI/Support/Marshaller.hpp>

namespace TRChartsJNI
{
	class StringMarshaller : public BasicObjectMarshaller<std::string, jstring>
	{
	public:
		virtual std::string marshall(JNIEnv * env, const jstring & in) const;

		virtual jstring unmarshall(JNIEnv * env, const std::string & in) const;
	};

	inline std::string StringMarshaller::marshall(JNIEnv * const env, const jstring & in) const
	{
		const char* chars = env->GetStringUTFChars(in, NULL);
		std::string ret(chars);
		env->ReleaseStringUTFChars(in, chars);
		return ret;
	}

	inline jstring StringMarshaller::unmarshall(JNIEnv * const env, const std::string & in) const
	{
		jstring ret = env->NewStringUTF((const char*)in.c_str());
		return ret;
	}
}

#endif