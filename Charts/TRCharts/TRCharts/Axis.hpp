/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#ifndef Charts_Axis_hpp
#define Charts_Axis_hpp

#include <TRCharts/Common.hpp>
#include <TRCharts/ChartElement.hpp>
#include <TRCharts/Edge.hpp>
#include <TRCharts/Color.hpp>
#include <TRCharts/LineStyle.hpp>
#include <TRCharts/Font.hpp>

namespace Charts
{
	
	class Axis;
	class Label;

	
	class GeneratedAxis : public Charts::ChartElement
	{
	public:
		virtual ~GeneratedAxis(void);

		std::shared_ptr<Axis> getSharedPtr(void);

		std::shared_ptr<const Axis> getSharedPtr(void) const;

		virtual Charts::Edge getEdge(void) const = 0;

		virtual void setEdge(Charts::Edge value) = 0;

		virtual const std::shared_ptr<Charts::Label> & getTitle(void) const = 0;

		virtual void setTitle(const std::shared_ptr<Charts::Label> & value) = 0;

		virtual const Charts::Color & getAxisColor(void) const = 0;

		virtual void setAxisColor(const Charts::Color & value) = 0;

		virtual const Charts::LineStyle & getAxisLineStyle(void) const = 0;

		virtual void setAxisLineStyle(const Charts::LineStyle & value) = 0;

		virtual bool isGridVisible(void) const = 0;

		virtual void setGridVisible(bool value) = 0;

		virtual const Charts::Color & getGridColor(void) const = 0;

		virtual void setGridColor(const Charts::Color & value) = 0;

		virtual const Charts::LineStyle & getGridLineStyle(void) const = 0;

		virtual void setGridLineStyle(const Charts::LineStyle & value) = 0;

		virtual const Charts::Color & getTickColor(void) const = 0;

		virtual void setTickColor(const Charts::Color & value) = 0;

		virtual const Charts::LineStyle & getTickLineStyle(void) const = 0;

		virtual void setTickLineStyle(const Charts::LineStyle & value) = 0;

		virtual double getTickOffset(void) const = 0;

		virtual void setTickOffset(double value) = 0;

		virtual double getTickSize(void) const = 0;

		virtual void setTickSize(double value) = 0;

		virtual const Charts::Color & getTickLabelColor(void) const = 0;

		virtual void setTickLabelColor(const Charts::Color & value) = 0;

		virtual const Charts::Font & getTickLabelFont(void) const = 0;

		virtual void setTickLabelFont(const Charts::Font & value) = 0;

		virtual double getTickLabelMaxSize(void) const = 0;

		virtual void setTickLabelMaxSize(double value) = 0;

		virtual double getTickLabelOffset(void) const = 0;

		virtual void setTickLabelOffset(double value) = 0;

		virtual double getScreenLength(void) const = 0;

		virtual void relayout(void) = 0;

	protected:
		GeneratedAxis(void);

	};
}

#include <TRCharts/Impl/AxisImpl.hpp>

#endif