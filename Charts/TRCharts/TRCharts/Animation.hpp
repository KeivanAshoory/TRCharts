/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#ifndef Charts_Animation_hpp
#define Charts_Animation_hpp

#include <TRCharts/Common.hpp>
#include <TRCharts/Attachable.hpp>

namespace Charts
{
	
	class Animation;
	class AnimationEffect;
	class AnimationDelegate;

	
	class GeneratedAnimation : public Charts::Attachable
	{
	public:
		virtual ~GeneratedAnimation(void);

		std::shared_ptr<Animation> getSharedPtr(void);

		std::shared_ptr<const Animation> getSharedPtr(void) const;

		virtual double getDuration(void) const = 0;

		virtual void setDuration(double value) = 0;

		virtual double getPosition(void) const = 0;

		virtual void setPosition(double value) = 0;

		virtual const std::vector<std::shared_ptr<Charts::AnimationEffect>> & getEffectList(void) const = 0;

		virtual void setEffectList(const std::vector<std::shared_ptr<Charts::AnimationEffect>> & value) = 0;

		virtual const std::shared_ptr<Charts::AnimationDelegate> & getDelegate(void) const = 0;

		virtual void setDelegate(const std::shared_ptr<Charts::AnimationDelegate> & value) = 0;

		virtual void restart(void) = 0;

		virtual void complete(void) = 0;

		virtual void cancel(void) = 0;

	protected:
		GeneratedAnimation(void);

	};
}

#include <TRCharts/Impl/AnimationImpl.hpp>

#endif