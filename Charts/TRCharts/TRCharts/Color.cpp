/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#include <TRCharts/Color.hpp>
#include <TRCharts/Color.hpp>


Charts::GeneratedColor::GeneratedColor(void)
	:red(0.0), green(0.0), blue(0.0), alpha(0.0)
{
}


Charts::GeneratedColor::GeneratedColor(double red, double green, double blue, double alpha)
	:red(red), green(green), blue(blue), alpha(alpha)
{
}


bool Charts::GeneratedColor::operator==(const GeneratedColor & other) const
{
	bool result = true;
	result = result && (this->red == other.red);
	result = result && (this->green == other.green);
	result = result && (this->blue == other.blue);
	result = result && (this->alpha == other.alpha);
	return result;
}


bool Charts::GeneratedColor::operator!=(const GeneratedColor & other) const
{
	return !(*this == other);
}


std::ostream & Charts::operator<<(std::ostream & to, const GeneratedColor & from)
{
	to << "Color[";
	to << "red: " << from.red << ", ";
	to << "green: " << from.green << ", ";
	to << "blue: " << from.blue << ", ";
	to << "alpha: " << from.alpha;
	to << "]";
	return to;
}