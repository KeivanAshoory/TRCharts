/*******************************************************************************
 * Copyright 2015 Thomson Reuters
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
/* NOTE: This file is autogenerated, do not edit this file directly.*/

#include <TRCharts/OHLC.hpp>
#include <TRCharts/OHLC.hpp>


Charts::GeneratedOHLC::GeneratedOHLC(void)
	:open(0.0), high(0.0), low(0.0), close(0.0)
{
}


Charts::GeneratedOHLC::GeneratedOHLC(double open, double high, double low, double close)
	:open(open), high(high), low(low), close(close)
{
}


bool Charts::GeneratedOHLC::operator==(const GeneratedOHLC & other) const
{
	bool result = true;
	result = result && (this->open == other.open);
	result = result && (this->high == other.high);
	result = result && (this->low == other.low);
	result = result && (this->close == other.close);
	return result;
}


bool Charts::GeneratedOHLC::operator!=(const GeneratedOHLC & other) const
{
	return !(*this == other);
}


std::ostream & Charts::operator<<(std::ostream & to, const GeneratedOHLC & from)
{
	to << "OHLC[";
	to << "open: " << from.open << ", ";
	to << "high: " << from.high << ", ";
	to << "low: " << from.low << ", ";
	to << "close: " << from.close;
	to << "]";
	return to;
}